@using WaffleDBServer.Pages.OrderPages

<div style="margin-top: 5px;" class="top-row pl-4 navbar-dark">
    <a href="">
        <img src="Images/waffelDB_NoOuterText.png" asp-append-version="true" width="40" />
        <span style="margin-left: 10px;font-size: 18px">WaffleDB</span>
    </a>
</div>
<div class="content">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => UpdateOrderTypeValue(OrderTypes.OrderAdditions)">
                <MatIcon Icon="bubble_chart" Style="transform: scale(0.8)"></MatIcon> <span style="margin-left: 4px">Getränke</span>
</NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => UpdateOrderTypeValue(OrderTypes.OrderPreMadeWaffles)">
                <MatIcon Icon="restaurant_menu" Style="transform: scale(0.8)"></MatIcon>  <span style="margin-left: 4px">Waffeln vorgefertigt</span>
</NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => UpdateOrderTypeValue(OrderTypes.OrderSelfMadeWaffles)">
                 <MatIcon Icon="extension" Style="transform: scale(0.8)"></MatIcon> <span style="margin-left: 4px">Waffel zusammenstellen</span>
            </NavLink>
        </li>
    </ul>
</div>

@code {
    [Parameter]
    public OrderTypes OrderTypeValue { get; set;}

    [Parameter]
    public EventCallback<OrderTypes> OrderTypeValueChanged { get; set; }

    protected async Task UpdateOrderTypeValue(OrderTypes orderType)
    {
        OrderTypeValue = orderType;
        await OrderTypeValueChanged.InvokeAsync(OrderTypeValue);
    }

}
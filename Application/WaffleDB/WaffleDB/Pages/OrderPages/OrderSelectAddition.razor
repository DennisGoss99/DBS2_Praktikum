@using WaffleDB.Component

<img id="banner" asp-append-version="true" src="Images/getranke_banner.png" />

<div style="padding-top: 24px;">
    @foreach (var item in Products)
    {
        <di @onclick="() => OpenDialog(item)">
            <ProductView Product="item"></ProductView>
        </di>
    }
</div>

<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogContent>
        <p>Anzahl:</p>
        <div style="text-align: center">
            <button disabled="@(Amount == 1)" style="margin-right: 15px;" class="dot" @onclick="()=> Amount--">
                <MatIcon Style="transform: scale(0.7)" Icon="remove"></MatIcon>
            </button>
            <span>@Amount</span>
            <button style="margin-left: 15px;" class="dot" @onclick="()=> Amount++">
                <MatIcon Style="transform: scale(0.7)" Icon="add"></MatIcon>
            </button>
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; LastClickedOnProduct = null; })">Abbrechen</MatButton>
        <MatButton OnClick="@OkClick">OK</MatButton>
    </MatDialogActions>
</MatDialog>


@code {

    [Parameter]
    public EventCallback<Tuple<Product,int>> OrderedSomething { get; set; }

    protected Product LastClickedOnProduct = null;

    bool dialogIsOpen = false;
    int Amount = -1;

    void OpenDialog(Product product)
    {
        LastClickedOnProduct = product;
        Amount = 1;
        dialogIsOpen = true;
    }

    private async Task OkClick()
    {

       if(LastClickedOnProduct != null)
           await OrderedSomething.InvokeAsync( new Tuple<Product, int>( LastClickedOnProduct, Amount));

        dialogIsOpen = false;
    }

    protected List<Product> Products = new List<Product>()
    {
        new Product() { idProduct = 1,name = "Waffel Ohne AllesT", price = 4.59f },
        new Product() { idProduct = 2, name = "Waffel mit ZuckerT", price = 12.4f },
        new Product() { idProduct = 3, name = "Waffel mit ZuckersadfasT", price = 12.4f },
        new Product() { idProduct = 4, name = "Waffel mit ZuckersdhgsT", price = 132.4f },
        new Product() { idProduct = 5, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 5, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 6, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 7, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 8, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 9, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 10, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { idProduct = 11, name = "Waffel mit ZuckerhdfhT", price = 14.4f },
        new Product() { name = "BananenWaffelT", price = 4.54f }
    };
}
